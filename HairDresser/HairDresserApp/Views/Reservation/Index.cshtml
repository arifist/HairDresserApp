@model ReservationDtoForInsertion

<head>
    <!-- Flatpickr CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <!-- Flatpickr JS -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/tr.js"></script>
    <script src="script.js"></script>
    <style>
        .notification {
            display: none; /* Varsayılan olarak gizli */
            padding: 15px;
            margin: 10px 0;
            border-radius: 5px;
        }

            .notification.error {
                background-color: #f8d7da;
                color: #721c24;
            }

            .notification.success {
                background-color: #d4edda;
                color: #155724;
            }
    </style>
</head>

<div class="text-center">
    <div class="display-6">Create Reservation</div>
</div>

<!-- Dinamik bildirim alanı -->
<div id="notification" class="notification"></div>

<form method="post" enctype="multipart/form-data" id="reservationForm">
    <div class="text-danger" asp-validation-summary="None"></div>

    <div class="form-group my-3">
        <label asp-for="ReservationName"></label>
        <input asp-for="ReservationName" class="form-control" type="text" />
    </div>

    <div class="form-group my-3">
        <label>Traş Türü:</label><br />
        <div class="form-check">
            <input asp-for="HairCutTypes" class="form-check-input" type="radio" id="hairCut" value="Saç" onchange="updateTimeOptions()" />
            <label class="form-check-label" for="hairCut">Saç</label>
        </div>
        <div class="form-check">
            <input asp-for="HairCutTypes" class="form-check-input" type="radio" id="beardTrim" value="Sakal" onchange="updateTimeOptions()" />
            <label class="form-check-label" for="beardTrim">Sakal</label>
        </div>
        <div class="form-check">
            <input asp-for="HairCutTypes" class="form-check-input" type="radio" id="hairAndBeard" value="Saç ve Sakal" onchange="updateTimeOptions()" />
            <label class="form-check-label" for="hairAndBeard">Saç ve Sakal</label>
        </div>
    </div>

    <div class="form-group my-3">
        <label asp-for="ReservationDay"></label>
        <input asp-for="ReservationDay" class="form-control" id="reservationDay" placeholder="Tarih seçin" />
    </div>

    <div class="form-group my-3">
        <label asp-for="ReservationHour"></label>
        <select asp-for="ReservationHour" class="form-control" id="reservationHour">
            <!-- Saat seçenekleri burada dinamik olarak eklenecek -->
        </select>
    </div>

    <div class="form-group my-3">
        <label asp-for="ReservationMessage"></label>
        <input asp-for="ReservationMessage" class="form-control" type="text" />
    </div>

    <div class="form-group my-3">
        <div class="btn-group">
            <button class="btn btn-primary" type="submit">
                <i class="fa fa-save"></i>
                Save
            </button>
            <a asp-action="Index" class="btn btn-outline-primary">
                <i class="fa fa-list"></i>
                Products
            </a>
        </div>
    </div>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        function updateFlatpickr() {
            const haircutType = document.querySelector('input[name="HairCutTypes"]:checked')?.value;
            let minuteIncrement = 30; // Varsayılan 30 dakika

            if (haircutType === "Saç ve Sakal") {
                minuteIncrement = 60; // Saç ve Sakal seçilirse 60 dakika
            }

            flatpickr("#reservationDay", {
                dateFormat: "Y-m-d",
                locale: "tr",
                onChange: function (selectedDates, dateStr, instance) {
                    fetchOccupiedHours(dateStr); // Tarih değiştiğinde dolu saatleri getir
                }
            });

            // Saat seçeneklerini oluştur
            const hourSelect = document.getElementById('reservationHour');
            hourSelect.innerHTML = ''; // Önceki seçenekleri temizle

            const startTime = flatpickr.parseDate("@ViewBag.WorkStartTime", "H:i");
            const endTime = flatpickr.parseDate("@ViewBag.WorkEndTime", "H:i");

            let currentTime = new Date(startTime);

            while (currentTime <= endTime) {
                const optionValue = flatpickr.formatDate(currentTime, "H:i");

                // Gizlenecek saatler
                const hiddenHours = ["12:00", "12:30"];

                if (!hiddenHours.includes(optionValue)) {
                    const option = document.createElement('option');
                    option.value = optionValue;
                    option.textContent = optionValue;
                    hourSelect.appendChild(option);
                }

                currentTime.setMinutes(currentTime.getMinutes() + minuteIncrement);
            }
        }

        async function fetchOccupiedHours(date) {
            const response = await fetch(`/Reservation/GetOccupiedHours?date=${date}`);
            const occupiedHours = await response.json();

            updateHourOptions(occupiedHours);
        }

        function updateHourOptions(occupiedHours) {
            const hourSelect = document.getElementById('reservationHour');
            const options = hourSelect.querySelectorAll('option');

            options.forEach(option => {
                if (occupiedHours.includes(option.value)) {
                    option.style.display = 'none'; // Dolu saatleri gizle
                } else {
                    option.style.display = ''; // Diğer saatleri göster
                }
            });
        }

        // İlk başlatma
        updateFlatpickr();

        // Tıraş türü değiştiğinde güncelleme
        document.querySelectorAll('input[name="HairCutTypes"]').forEach(element => {
            element.addEventListener('change', updateFlatpickr);
        });

        // Form gönderimi sırasında bildirim gösterimi
        const form = document.getElementById('reservationForm');
        form.addEventListener('submit', async function (event) {
            event.preventDefault(); // Formun normal şekilde gönderilmesini engelle

            // Form verilerini topla
            const formData = new FormData(form);
            const response = await fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            // Yanıtı işleme
            const notification = document.getElementById('notification');
            const result = await response.json();
            if (result.success) {
                notification.className = 'notification success'; // Başarı durumu
                notification.textContent = result.message;
                setTimeout(() => {
                    window.location.href = "/user";
                }, 1400);
            } else {
                notification.className = 'notification error'; // Hata durumu
                notification.textContent = result.message;
            }
            notification.style.display = 'block'; // Bildirimi göster
        });
    });

</script>
